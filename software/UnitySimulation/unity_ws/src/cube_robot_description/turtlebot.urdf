<?xml version="1.0" encoding="utf-8"?>
<robot name="turtlebot" xmlns:xacro="http://ros.org/wiki/xacro">
  <material name="orange">
    <color rgba="1 0.4235 0.0392 1" />
  </material>
  <material name="Default-Material">
    <color rgba="1 1 1 1" />
  </material>
  <material name="black">
    <color rgba="0 0 0 1" />
  </material>
  <link name="base_footprint" />
  <link name="base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.01 0 0" />
      <mass value="2" />
      <inertia ixx="0.0199950002133846" ixy="0" ixz="0" iyy="0.0199950002133846" iyz="0" izz="0.0367499999701977" />
    </inertial>
    <visual>
      <origin xyz="0 0 0.05949" />
      <geometry>
        <box size="0.356 0.18 0.11" />
      </geometry>
      <material name="orange" />
    </visual>
    <collision>
      <origin xyz="0 0 0.05949" />
      <geometry>
        <box size="0.356 0.18 0.11" />
      </geometry>
    </collision>
  </link>
  <link name="wheel_left_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.0099999998" />
      <inertia ixx="0.00100000004749745" ixy="0" ixz="0" iyy="0.00100000004749745" iyz="0" izz="0.00100000004749745" />
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://meshes/wheel.dae" scale="1 1 1" />
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="0.0352" />
      </geometry>
    </collision>
  </link>
  <link name="wheel_right_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.0099999998" />
      <inertia ixx="0.00100000004749745" ixy="0" ixz="0" iyy="0.00100000004749745" iyz="0" izz="0.00100000004749745" />
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://meshes/wheel.dae" scale="1 1 1" />
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="0.035" />
      </geometry>
    </collision>
  </link>
  <link name="caster_front_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.0099999998" />
      <inertia ixx="0.00100000004749745" ixy="0" ixz="0" iyy="0.00100000004749745" iyz="0" izz="0.00100000004749745" />
    </inertial>
    <visual>
      <geometry>
        <cylinder length="0.0176" radius="0.017" />
      </geometry>
      <material name="Default-Material" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017" />
      </geometry>
    </collision>
  </link>
  <link name="caster_back_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.0099999998" />
      <inertia ixx="0.00100000004749745" ixy="0" ixz="0" iyy="0.00100000004749745" iyz="0" izz="0.00100000004749745" />
    </inertial>
    <visual>
      <geometry>
        <cylinder length="0.0176" radius="0.017" />
      </geometry>
      <material name="Default-Material" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017" />
      </geometry>
    </collision>
  </link>
  <link name="hat">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.001" />
      <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
    </inertial>
    <visual>
      <origin xyz="0.12 0 0.14" />
      <geometry>
        <box size="0.05 0.05 0.05" />
      </geometry>
      <material name="black" />
    </visual>
  </link>
  <link name="lidar">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="1" />
      <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
    </inertial>
  </link>
  <joint name="base_footprint_base_link_joint" type="fixed">
    <origin xyz="0 0 0.0102" />
    <parent link="base_footprint" />
    <child link="base_link" />
  </joint>
  <joint name="wheel_left_joint" type="continuous">
    <origin rpy="-1.570796 0 0" xyz="0 0.115 0.025" />
    <parent link="base_link" />
    <child link="wheel_left_link" />
    <axis xyz="0 0 1" />
  </joint>
  <joint name="wheel_right_joint" type="continuous">
    <origin rpy="-1.570796 0 0" xyz="0 -0.115 0.025" />
    <parent link="base_link" />
    <child link="wheel_right_link" />
    <axis xyz="0 0 1" />
  </joint>
  <joint name="" type="fixed">
    <origin rpy="-1.570796 0 0" xyz="0.115 0 0.007" />
    <parent link="base_link" />
    <child link="caster_front_link" />
  </joint>
  <joint name="" type="fixed">
    <origin rpy="-1.570796 0 0" xyz="-0.135 0 0.009" />
    <parent link="base_link" />
    <child link="caster_back_link" />
  </joint>
  <joint name="" type="fixed">
    <parent link="base_link" />
    <child link="hat" />
  </joint>
  <joint name="" type="fixed">
    <origin xyz="0.114 0 0.165" />
    <parent link="base_link" />
    <child link="lidar" />
  </joint>
  <gazebo reference="wheel_left_link">
  <mu1>1.0</mu1>
  <mu2>1.0</mu2>
  <kp>1000000.0</kp>
  <kd>100.0</kd>
  <minDepth>0.001</minDepth>
  <maxVel>1.0</maxVel>
</gazebo>
<gazebo reference="wheel_right_link">
  <mu1>1.0</mu1>
  <mu2>1.0</mu2>
  <kp>1000000.0</kp>
  <kd>100.0</kd>
  <minDepth>0.001</minDepth>
  <maxVel>1.0</maxVel>
</gazebo>
<gazebo reference="caster_front_link">
  <mu1>0.0</mu1>
  <mu2>0.0</mu2>
  <kp>1000000.0</kp>
  <kd>100.0</kd>
  <minDepth>0.001</minDepth>
  <maxVel>1.0</maxVel>
</gazebo>
<gazebo reference="caster_back_link">
  <mu1>0.0</mu1>
  <mu2>0.0</mu2>
  <kp>1000000.0</kp>
  <kd>100.0</kd>
  <minDepth>0.001</minDepth>
  <maxVel>1.0</maxVel>
</gazebo>
<gazebo reference="base_link">
  <mu1>0.3</mu1>
  <mu2>0.3</mu2>
  <sensor name="bumpers" type="contact">
    <always_on>1</always_on>
    <update_rate>50.0</update_rate>
    <visualize>true</visualize>
    <contact>
      <collision>base_footprint_fixed_joint_lump__base_collision</collision>
    </contact>
  </sensor>
</gazebo>
<gazebo reference="cliff_sensor_left_link">
  <sensor name="cliff_sensor_left" type="ray">
    <always_on>true</always_on>
    <update_rate>50</update_rate>
    <visualize>true</visualize>
    <ray>
      <scan>
        <horizontal>
          <samples>50</samples>
          <resolution>1.0</resolution>
          <min_angle>-0.0436</min_angle>
          <!-- -2.5 degree -->
          <max_angle>0.0436</max_angle>
          <!-- 2.5 degree -->
        </horizontal>
        <!--            Can't use vertical rays until this bug is resolved: -->
        <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
        <!-- \t          <vertical> -->
        <!-- \t            <samples>50</samples> -->
        <!-- \t            <resolution>1.0</resolution> -->
        <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
        <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
        <!-- \t          </vertical> -->
      </scan>
      <range>
        <min>0.01</min>
        <max>0.15</max>
        <resolution>1.0</resolution>
      </range>
    </ray>
  </sensor>
</gazebo>
<gazebo reference="cliff_sensor_right_link">
  <sensor name="cliff_sensor_right" type="ray">
    <always_on>true</always_on>
    <update_rate>50</update_rate>
    <visualize>true</visualize>
    <ray>
      <scan>
        <horizontal>
          <samples>50</samples>
          <resolution>1.0</resolution>
          <min_angle>-0.0436</min_angle>
          <!-- -2.5 degree -->
          <max_angle>0.0436</max_angle>
          <!-- 2.5 degree -->
        </horizontal>
        <!--            Can't use vertical rays until this bug is resolved: -->
        <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
        <!-- \t          <vertical> -->
        <!-- \t            <samples>50</samples> -->
        <!-- \t            <resolution>1.0</resolution> -->
        <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
        <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
        <!-- \t          </vertical> -->
      </scan>
      <range>
        <min>0.01</min>
        <max>0.15</max>
        <resolution>1.0</resolution>
      </range>
    </ray>
  </sensor>
</gazebo>
<gazebo reference="cliff_sensor_front_link">
  <sensor name="cliff_sensor_front" type="ray">
    <always_on>true</always_on>
    <update_rate>50</update_rate>
    <visualize>true</visualize>
    <ray>
      <scan>
        <horizontal>
          <samples>50</samples>
          <resolution>1.0</resolution>
          <min_angle>-0.0436</min_angle>
          <!-- -2.5 degree -->
          <max_angle>0.0436</max_angle>
          <!-- 2.5 degree -->
        </horizontal>
        <!-- \t          Can't use vertical rays until this bug is resolved: -->
        <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
        <!-- \t          <vertical> -->
        <!-- \t            <samples>50</samples> -->
        <!-- \t            <resolution>1.0</resolution> -->
        <!-- \t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
        <!-- \t            <max_angle>0.0436</max_angle> 2.5 degree -->
        <!-- \t          </vertical> -->
      </scan>
      <range>
        <min>0.01</min>
        <max>0.15</max>
        <resolution>1.0</resolution>
      </range>
    </ray>
  </sensor>
</gazebo>
<gazebo reference="gyro_link">
  <sensor name="imu" type="imu">
    <always_on>true</always_on>
    <update_rate>50</update_rate>
    <visualize>false</visualize>
    <imu>
      <noise>
        <type>gaussian</type>
        <rate>
          <mean>0.0</mean>
          <stddev>1.96e-06</stddev>
          <!-- 0.25 x 0.25 (deg/s) -->
          <bias_mean>0.0</bias_mean>
          <bias_stddev>0.0</bias_stddev>
        </rate>
        <accel>
          <!-- not used in the plugin and real robot, hence using tutorial values -->
          <mean>0.0</mean>
          <stddev>1.7e-2</stddev>
          <bias_mean>0.1</bias_mean>
          <bias_stddev>0.001</bias_stddev>
        </accel>
      </noise>
    </imu>
  </sensor>
</gazebo>
<gazebo>
  <plugin filename="libgazebo_ros_kobuki.so" name="kobuki_controller">
    <publish_tf>1</publish_tf>
    <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
    <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
    <wheel_separation>.230</wheel_separation>
    <wheel_diameter>0.070</wheel_diameter>
    <torque>1.0</torque>
    <velocity_command_timeout>0.6</velocity_command_timeout>
    <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
    <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
    <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
    <cliff_detection_threshold>0.04</cliff_detection_threshold>
    <bumper_name>bumpers</bumper_name>
    <imu_name>imu</imu_name>
  </plugin>
</gazebo>
<gazebo reference="camera_link">
  <sensor name="camera" type="depth">
    <always_on>true</always_on>
    <update_rate>20.0</update_rate>
    <camera>
      <horizontal_fov>1.0471975512</horizontal_fov>
      <image>
        <format>B8G8R8</format>
        <width>640</width>
        <height>480</height>
      </image>
      <clip>
        <near>0.05</near>
        <far>8.0</far>
      </clip>
    </camera>
    <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_camera_controller">
      <cameraName>camera</cameraName>
      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <imageTopicName>rgb/image_raw</imageTopicName>
      <depthImageTopicName>depth/image_raw</depthImageTopicName>
      <pointCloudTopicName>depth/points</pointCloudTopicName>
      <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
      <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
      <frameName>camera_depth_optical_frame</frameName>
      <baseline>0.1</baseline>
      <distortion_k1>0.0</distortion_k1>
      <distortion_k2>0.0</distortion_k2>
      <distortion_k3>0.0</distortion_k3>
      <distortion_t1>0.0</distortion_t1>
      <distortion_t2>0.0</distortion_t2>
      <pointCloudCutoff>0.4</pointCloudCutoff>
    </plugin>
  </sensor>
</gazebo>
</robot>